[package]
name = "iot-packet-verifier"
version = "0.1.0"
edition = "2021"
description = "Validate LoRaWAN traffic for Helium Packet-Router (HPR) business ops"
authors = ["Helium <info@helium.com>"]
license = "Apache-2.0"

[[bin]]
name = "iot_packet_verifier"
path = "src/main.rs"
doc = false

[features]
# Generate protobuf files via: cargo test --feature=sample-data
sample-data = ["async-compression", "futures-util"]

[dependencies]
dotenv = "0"
thiserror = "1"

clap = {version = "3", features = ["derive"]}
sqlx = {version = "0", features = ["postgres", "uuid", "decimal", "chrono", "migrate", "macros", "runtime-tokio-rustls"]}

tracing = "0"
tracing-subscriber = { version = "0", features = ["env-filter"] }
base64 = "0"
sha2 = "*"
lazy_static = "*"
chrono = {version = "0", features = ["serde"]}
triggered = "0"

once_cell = "1"

poc-metrics = {path = "../metrics"}

rust_decimal = "1"
rust_decimal_macros = "1"
tonic = "0"
http = "*"
metrics = "0.20"
metrics-exporter-prometheus = "0.11.0"
rand = "*"
async-trait = "*"
async-compression = {version="*", optional=true}
#aws-config = "0"
#aws-sdk-s3 = "0"
#clap = {version = "3", features = ["derive"]}
#dotenv = "0"
futures = "*"
futures-core = "*"
futures-util = {version="*", optional=true}

helium-crypto = {git="https://github.com/helium/helium-crypto-rs", tag="v0.3.4"}

# FIXME
# helium-proto = {git="https://github.com/helium/proto", branch="master", features=["services"]}
# helium-proto = {git="https://github.com/helium/proto", branch="macpie/packet_router", features=["services"]}
helium-proto = {git="https://github.com/helium/proto", branch="dpezely/packet-verifier", features=["services"]}
#helium-proto = {path="../../../helium/proto", features=["services"]}

# lazy_static = "1"

poc-store = {path = "../store"}
#poc-metrics = {path = "../metrics"}

prost = "0"
bytes = "*"

serde =  {version = "1", features=["derive"]}
serde_json = "1"

#thiserror = "1"

tokio = { version = "1", default-features=false, features=["fs", "macros", "signal", "rt", "process", "time"] }
tokio-stream = {version = "0", features = ["fs"] }
tokio-util = "0"
