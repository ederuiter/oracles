# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import heartbeat_pb2 as heartbeat__pb2


class poc_mobileStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.submit_speedtest = channel.unary_unary(
                '/helium.poc_mobile.poc_mobile/submit_speedtest',
                request_serializer=heartbeat__pb2.speedtest_req_v1.SerializeToString,
                response_deserializer=heartbeat__pb2.speedtest_resp_v1.FromString,
                )
        self.submit_cell_heartbeat = channel.unary_unary(
                '/helium.poc_mobile.poc_mobile/submit_cell_heartbeat',
                request_serializer=heartbeat__pb2.cell_heartbeat_req_v1.SerializeToString,
                response_deserializer=heartbeat__pb2.cell_heartbeat_resp_v1.FromString,
                )


class poc_mobileServicer(object):
    """Missing associated documentation comment in .proto file."""

    def submit_speedtest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def submit_cell_heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_poc_mobileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'submit_speedtest': grpc.unary_unary_rpc_method_handler(
                    servicer.submit_speedtest,
                    request_deserializer=heartbeat__pb2.speedtest_req_v1.FromString,
                    response_serializer=heartbeat__pb2.speedtest_resp_v1.SerializeToString,
            ),
            'submit_cell_heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.submit_cell_heartbeat,
                    request_deserializer=heartbeat__pb2.cell_heartbeat_req_v1.FromString,
                    response_serializer=heartbeat__pb2.cell_heartbeat_resp_v1.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'helium.poc_mobile.poc_mobile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class poc_mobile(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def submit_speedtest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helium.poc_mobile.poc_mobile/submit_speedtest',
            heartbeat__pb2.speedtest_req_v1.SerializeToString,
            heartbeat__pb2.speedtest_resp_v1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def submit_cell_heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helium.poc_mobile.poc_mobile/submit_cell_heartbeat',
            heartbeat__pb2.cell_heartbeat_req_v1.SerializeToString,
            heartbeat__pb2.cell_heartbeat_resp_v1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
